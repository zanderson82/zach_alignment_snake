__use_yte__: true
# this config needs to be parsed with YTE
# input configuration
server: mcclintock
#
samples: config/NSC0000_example_config.tsv
targetfile: config/targets.txt
project: NSC0000_example
#
## status notification email address. Comma separated is OK.
#
email: mgaley@uw.edu,zander82@uw.edu
#
## naming customization
prefix_regex: "{SAMPLEID}-NP-{STRATEGY}_{PORE}-{KIT}-{PROJECT_ID}-{OUTSIDE_ID}_{GENE}-{METH}-{MB}"
prefix_lookup: "{sid}-NP-{strat}_{pore}-{kit}-{project}-{oid}_{gene}-{meth}-{member}"
### the first value of sampleDB_prefix_column_names is processed as the index column.
sampleDB_prefix_format_columns: "sid,strat,pore,kit,project,oid,gene,meth,member"
sampleDB_prefix_column_names: "SampleID,Strategy,Flowcell,Kit,Project,ExternalID,TargetGene,Methylation,Member"
#
## input bam file naming string
basecalled_bam_string: "{wildcards.SAMPLEID}*{wildcards.STRATEGY}*"
#
# change explicitLibraries to true to specify library paths in target file rather than sample identifiers
explicitLibraries: false
#
# input directory changed for testing
#input_dir: /waldo/testing
input_dir: /waldo/bam_files_unaligned
final_dir: ?"/n/alignments/" + this["project"]
working_dir: ?"/n/alignments_inprogress/" + this["project"]
#
# resources
threads: 30
#
# target specification
# set allTargets to true to generate all possible files
allTargets: false
allTranscriptomeTargets: false
#optionally change qcCaller to samtools
qcCaller: cramino
# to generate only some files, comment out unwanted analysis steps
# adaptive sampling runs will use the same outputs
outputs: 
  alignBam: true
  clair3: true
  sniffles: true
  svim: false
  cuteSV: true
  CNVcalls: true
  VEP: true
  phaseQC: true
  basicQC: true
  report: true
  phaseIndels: true
#
transcriptomeOutputs:
  alignment: true
  annotation: true
  transcriptome: false
#
#
#Chromosomes to include in analysis
chromosomes: chr1,chr2,chr3,chr4,chr5,chr6,chr7,chr8,chr9,chr10,chr11,chr12,chr13,chr14,chr15,chr16,chr17,chr18,chr19,chr20,chr21,chr22,chrX,chrY,chrM
#
# CNV anaysis: bin size in kb.
# Options are 1,5,10,15,50,100,500,or 1000. Recommended is 500
cnv_binsize: 500
#
# reference data paths
refgenome: /n/dat/hg38/hg38.no_alt.fa
ontmmifile: /n/dat/hg38/hg38.no_alt.mmi
geneAnnotationBed: /n/dat/hg38/resorted.hg38.genes.mergedintervals.bed
tandemRepeatBed: /n/dat/annotationData/human_GRCh38_no_alt_analysis_set.trf.bed
transcript_reference: /n/dat/hg38/hg38.ncbiRefSeq.gtf
variant_whitelist: /n/dat/annotationData/common.pathogenic.variants.vep111.tsv
#
# tool paths
bedfiledir: /n/alignments/bed_targets
clairmodelpath: /n/dat/clair3
vep_caches_path: /n/dat/vep
vep_data_path: /n/dat/annotationData
#
# conda environment names
conda_rust: rust_plus
# conda vep environment has manual installation steps. please look at notes in workflow/resources/envs/vep-111.0.yaml
conda_vep: vep-111.0
conda_bcftools: bcftools-1.19
conda_bedtools: bedtools-2.31.1
conda_r: Rtools-1.2
conda_gffread: gffread-0.12.7
conda_gffcompare: gffcompare-0.12.6
conda_pychopper: pychopper-2.7.9
conda_stringtie: stringtie-2.2.1

# updated conda_environments
conda_samtools: samtools-1.19
conda_minimap: minimap-2.28
conda_clair3: clair3-1.0.8
conda_cutesv: cutesv-2.1.1
conda_sniffles: sniffles-2.3.3
conda_svim: svim-2.0.0
conda_longphase: longphase-1.7.3
# this qdnaseq conda environment can not be created using the included .yaml file.
# use the qdnaseq conda environment to create a yaml file with required dependencies,
# then install the R libraries QDNAseq.hg38 using devtools and QDNAseq=v1.40.0 using bioconductor.
# devtools::install_github("asntech/QDNAseq.hg38@main")
# BiocManager::install("QDNAseq")
# Do NOT update other libraries installed through conda using R when prompted.
# if these dependencies becomes available in the future the yaml file should be modified
# currently (2024-10-23) only qdnaseq version 1.16.0 is available through bioconda
conda_qdnaseq: qdnaseq-1.42.0
conda_cramino: cramino-0.14.1 
conda_vep-annotate: vep-annotate
conda_karyoplotR: karyplotR-1.28.0